{"ast":null,"code":"import _defineProperty from\"/Users/nextbitgeek/Dev-Bastion/CricketPedia-XseedHackathon/IPLInfo/src/main/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/nextbitgeek/Dev-Bastion/CricketPedia-XseedHackathon/IPLInfo/src/main/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nextbitgeek/Dev-Bastion/CricketPedia-XseedHackathon/IPLInfo/src/main/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/nextbitgeek/Dev-Bastion/CricketPedia-XseedHackathon/IPLInfo/src/main/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/nextbitgeek/Dev-Bastion/CricketPedia-XseedHackathon/IPLInfo/src/main/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/nextbitgeek/Dev-Bastion/CricketPedia-XseedHackathon/IPLInfo/src/main/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import axios from'axios';import MatchInfo from'./matchInfo.js';var FetchSeriesInfo=/*#__PURE__*/function(_React$Component){_inherits(FetchSeriesInfo,_React$Component);//Intializing State\nfunction FetchSeriesInfo(props){var _this;_classCallCheck(this,FetchSeriesInfo);_this=_possibleConstructorReturn(this,_getPrototypeOf(FetchSeriesInfo).call(this,props));_this.populateRowsWithData=function(){var iplMatch=_this.state.iplMatch.map(function(ipl){return React.createElement(MatchInfo,{key:ipl.id,city:ipl.city,venue:ipl.venue,date:ipl.date,team1:ipl.team1,team2:ipl.team2,mom:ipl.player_of_match,winner:ipl.winner,win_by_runs:ipl.win_by_runs,win_by_wickets:ipl.win_by_wickets});});return iplMatch;};_this.state={iplMatch:[]};return _this;}//Axios Get Call\n_createClass(FetchSeriesInfo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var params=this.props.match.params;axios.get(\"http://localhost:8080/Series/\".concat(params.handle)).then(function(response){var results=response.data.content;var updatedResults=results.map(function(results){return _objectSpread({},results);});_this2.setState({iplMatch:updatedResults});});}//Tampering Json Data and Populating Json\n},{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(\"h1\",{className:\"text-primary text-center\"},\"IPL T20 Year \",this.props.match.params.handle),React.createElement(\"table\",{className:\"table table-striped\"},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",{scope:\"col\"},\"Date\"),React.createElement(\"th\",{scope:\"col\"},\"Venue\"),React.createElement(\"th\",{scope:\"col\"},\"Event\"),React.createElement(\"th\",{scope:\"col\"},\"Match Summary\"),React.createElement(\"th\",{scope:\"col\"},\"Man of the Match\"))),this.populateRowsWithData()));}}]);return FetchSeriesInfo;}(React.Component);export{FetchSeriesInfo as default};","map":{"version":3,"sources":["/Users/nextbitgeek/Dev-Bastion/CricketPedia-XseedHackathon/IPLInfo/src/main/app/src/Dashboard/seriesInfoTable.js"],"names":["React","axios","MatchInfo","FetchSeriesInfo","props","populateRowsWithData","iplMatch","state","map","ipl","id","city","venue","date","team1","team2","player_of_match","winner","win_by_runs","win_by_wickets","params","match","get","handle","then","response","results","data","content","updatedResults","setState","Component"],"mappings":"g9DAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,gBAAtB,C,GAGqBC,CAAAA,e,qFAEnB;AACA,yBAAYC,KAAZ,CAAkB,iDAChB,iFAAMA,KAAN,GADgB,MA4BlBC,oBA5BkB,CA4BK,UAAM,CAC3B,GAAMC,CAAAA,QAAQ,CAAG,MAAKC,KAAL,CAAWD,QAAX,CAAoBE,GAApB,CAAwB,SAAAC,GAAG,CAAI,CAC5C,MAAO,qBAAC,SAAD,EACH,GAAG,CAAIA,GAAG,CAACC,EADR,CAEH,IAAI,CAAID,GAAG,CAACE,IAFT,CAGH,KAAK,CAAKF,GAAG,CAACG,KAHX,CAIH,IAAI,CAAIH,GAAG,CAACI,IAJT,CAKH,KAAK,CAAIJ,GAAG,CAACK,KALV,CAMH,KAAK,CAAIL,GAAG,CAACM,KANV,CAOH,GAAG,CAAIN,GAAG,CAACO,eAPR,CAQH,MAAM,CAAIP,GAAG,CAACQ,MARX,CASH,WAAW,CAAIR,GAAG,CAACS,WAThB,CAUH,cAAc,CAAIT,GAAG,CAACU,cAVnB,EAAP,CAYD,CAbc,CAAjB,CAeE,MAAOb,CAAAA,QAAP,CACD,CA7Ce,CAEhB,MAAKC,KAAL,CAAa,CACXD,QAAQ,CAAE,EADC,CAAb,CAFgB,aAKjB,CAED;yFACmB,oBACAc,CAAAA,MADA,CACa,KAAKhB,KADlB,CACTiB,KADS,CACAD,MADA,CAGjBnB,KAAK,CAACqB,GAAN,wCAA0CF,MAAM,CAACG,MAAjD,GACGC,IADH,CACS,SAAAC,QAAQ,CAAI,CAEjB,GAAMC,CAAAA,OAAO,CAAGD,QAAQ,CAACE,IAAT,CAAcC,OAA9B,CACA,GAAMC,CAAAA,cAAc,CAAGH,OAAO,CAAClB,GAAR,CAAY,SAAAkB,OAAO,CAAI,CAC1C,wBACOA,OADP,EAGC,CAJkB,CAAvB,CAMI,MAAI,CAACI,QAAL,CAAc,CAACxB,QAAQ,CAAEuB,cAAX,CAAd,EACL,CAXH,EAaD,CAED;uCAqBW,CAEP,MACE,gCACE,0BAAI,SAAS,CAAC,0BAAd,kBACgB,KAAKzB,KAAL,CAAWiB,KAAX,CAAiBD,MAAjB,CAAwBG,MADxC,CADF,CAKE,6BAAO,SAAS,CAAC,qBAAjB,EACE,iCACE,8BACE,0BAAI,KAAK,CAAC,KAAV,SADF,CAEE,0BAAI,KAAK,CAAC,KAAV,UAFF,CAGE,0BAAI,KAAK,CAAC,KAAV,UAHF,CAIE,0BAAI,KAAK,CAAC,KAAV,kBAJF,CAKE,0BAAI,KAAK,CAAC,KAAV,qBALF,CADF,CADF,CAUG,KAAKlB,oBAAL,EAVH,CALF,CADF,CAoBD,C,6BAxEwCL,KAAK,CAAC+B,S,SAA9B5B,e","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport MatchInfo from './matchInfo.js'\n\n\nexport default class FetchSeriesInfo extends React.Component {\n\n  //Intializing State\n  constructor(props){\n    super(props);\n    this.state = {\n      iplMatch: []\n    }\n  }\n  \n  //Axios Get Call\n  componentDidMount(){\n    const { match: { params } } = this.props;\n\n    axios.get(`http://localhost:8080/Series/${params.handle}`)\n      .then( response => {\n\n        const results = response.data.content;\n        const updatedResults = results.map(results => {\n            return {\n                ...results,\n              }\n            });\n\n            this.setState({iplMatch: updatedResults});\n      })\n\n  }\n\n  //Tampering Json Data and Populating Json\n\n  populateRowsWithData = () => {\n    const iplMatch = this.state.iplMatch.map(ipl => {\n        return <MatchInfo\n            key = {ipl.id}\n            city = {ipl.city}\n            venue = { ipl.venue }\n            date = {ipl.date}\n            team1 = {ipl.team1}\n            team2 = {ipl.team2}\n            mom = {ipl.player_of_match}\n            winner = {ipl.winner}\n            win_by_runs = {ipl.win_by_runs}\n            win_by_wickets = {ipl.win_by_wickets}\n          />;\n      });\n\n      return iplMatch\n    }\n\n    render() {\n\n      return (\n        <div>\n          <h1 className=\"text-primary text-center\">\n            IPL T20 Year {this.props.match.params.handle}\n          </h1>\n\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Date</th>\n                <th scope=\"col\">Venue</th>\n                <th scope=\"col\">Event</th>\n                <th scope=\"col\">Match Summary</th>\n                <th scope=\"col\">Man of the Match</th>\n              </tr>\n            </thead>\n            {this.populateRowsWithData()}\n          </table>\n        </div>\n      );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}